# Generated by Django 4.2.8 on 2024-11-25 22:12

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers
import utilities.json


class Migration(migrations.Migration):

    dependencies = [
        ('extras', '0105_customfield_min_max_values'),
        ('netbox_user', '0004_remove_approver_color'),
    ]

    operations = [
        migrations.AlterField(
            model_name='approver',
            name='aprovador',
            field=models.CharField(blank=True, max_length=100, unique=True),
        ),
        migrations.AlterField(
            model_name='environment',
            name='ambiente',
            field=models.CharField(blank=True, max_length=100, unique=True),
        ),
        migrations.AlterField(
            model_name='groups',
            name='grupo',
            field=models.CharField(blank=True, max_length=100, unique=True),
        ),
        migrations.AlterField(
            model_name='resources',
            name='recurso',
            field=models.CharField(blank=True, max_length=100, unique=True),
        ),
        migrations.AlterField(
            model_name='sector',
            name='setor',
            field=models.CharField(blank=True, max_length=100, unique=True),
        ),
        migrations.AlterUniqueTogether(
            name='resourceaccess',
            unique_together={('user', 'recurso')},
        ),
        migrations.CreateModel(
            name='ResourceGroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('index', models.IntegerField()),
                ('tipo_acesso', models.CharField(blank=True)),
                ('comments', models.TextField(blank=True)),
                ('ambiente', models.ManyToManyField(blank=True, to='netbox_user.environment')),
                ('aprovador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_aprovador', to='netbox_user.approver')),
                ('groupslist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_group_rules', to='netbox_user.groups')),
                ('recurso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_rules', to='netbox_user.resources')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name': 'Resource User',
                'ordering': ('groupslist', 'index'),
            },
        ),
    ]
